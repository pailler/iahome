const fs = require('fs');
const path = require('path');

// Liste des images √† tester
const imagesToTest = [
  'sdnext-interface.svg',
  'iametube-interface.svg',
  'iaphoto-interface.svg',
  'iavideo-interface.svg',
  'canvas-framework.svg'
];

function testAllImages() {
  console.log('üé® Test d\'accessibilit√© de toutes les images SVG...\n');

  const imagesDir = path.join(__dirname, 'public', 'images');
  
  if (!fs.existsSync(imagesDir)) {
    console.log('‚ùå Dossier images non trouv√©: public/images/');
    return;
  }

  console.log('üìÅ Dossier images trouv√©: public/images/');
  console.log('üîç V√©rification des fichiers...\n');

  let successCount = 0;
  let errorCount = 0;

  imagesToTest.forEach(imageName => {
    const imagePath = path.join(imagesDir, imageName);
    const url = `/images/${imageName}`;
    
    if (fs.existsSync(imagePath)) {
      const stats = fs.statSync(imagePath);
      const fileSize = (stats.size / 1024).toFixed(1); // KB
      
      console.log(`‚úÖ ${imageName} - ${fileSize} KB`);
      console.log(`   üìç Fichier: ${imagePath}`);
      console.log(`   üîó URL: http://localhost:8021${url}`);
      successCount++;
    } else {
      console.log(`‚ùå ${imageName} - Fichier manquant`);
      errorCount++;
    }
  });

  console.log('\nüìä R√©sum√©:');
  console.log(`‚úÖ Images trouv√©es: ${successCount}`);
  console.log(`‚ùå Images manquantes: ${errorCount}`);
  console.log(`üìà Taux de succ√®s: ${((successCount / imagesToTest.length) * 100).toFixed(1)}%`);

  if (successCount === imagesToTest.length) {
    console.log('\nüéâ Toutes les images sont pr√™tes !');
    console.log('‚úÖ Organisation dans /images/ r√©ussie');
    console.log('‚úÖ Images SVG cr√©√©es avec succ√®s');
    console.log('‚úÖ URLs coh√©rentes et accessibles');
    
    console.log('\nüöÄ Prochaines √©tapes:');
    console.log('1. Mettre √† jour la base de donn√©es avec les nouvelles URLs');
    console.log('2. Tester l\'affichage sur le site');
    console.log('3. V√©rifier l\'effet hover sur les images');
  } else {
    console.log('\n‚ö†Ô∏è  Certaines images sont manquantes');
    console.log('üí° Relancez le script create-card-images.js');
  }

  console.log('\nüîó URLs de test:');
  imagesToTest.forEach(imageName => {
    console.log(`   http://localhost:8021/images/${imageName}`);
  });
}

// Ex√©cuter le test
testAllImages(); 