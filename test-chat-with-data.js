const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

// Configuration Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Variables d\'environnement Supabase manquantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function testChatWithData() {
  console.log('üß™ Test du chat IA avec acc√®s aux donn√©es...\n');

  try {
    // 1. Tester la r√©cup√©ration des articles de blog
    console.log('üìù Test r√©cup√©ration articles de blog...');
    const { data: articles, error: articlesError } = await supabase
      .from('blog_articles')
      .select('title, content, category, is_published')
      .eq('is_published', true)
      .order('created_at', { ascending: false })
      .limit(5);

    if (articlesError) {
      console.log('‚ùå Erreur articles:', articlesError.message);
    } else {
      console.log(`‚úÖ ${articles?.length || 0} articles trouv√©s`);
      if (articles && articles.length > 0) {
        articles.forEach(article => {
          console.log(`   - ${article.title} (${article.category})`);
        });
      }
    }

    // 2. Tester la r√©cup√©ration des modules
    console.log('\nüîß Test r√©cup√©ration modules...');
    const { data: modules, error: modulesError } = await supabase
      .from('modules')
      .select('title, description, category, price')
      .order('title', { ascending: true });

    if (modulesError) {
      console.log('‚ùå Erreur modules:', modulesError.message);
    } else {
      console.log(`‚úÖ ${modules?.length || 0} modules trouv√©s`);
      if (modules && modules.length > 0) {
        modules.forEach(module => {
          console.log(`   - ${module.title} (${module.category}, ${module.price}‚Ç¨)`);
        });
      }
    }

    // 3. Tester l'API de chat
    console.log('\nü§ñ Test de l\'API de chat...');
    const testMessage = "Peux-tu me parler des modules disponibles et des articles de blog ?";
    
    const response = await fetch('http://localhost:8021/api/chat', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        message: testMessage,
        userId: 'test-user-id',
        conversationHistory: []
      }),
    });

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ R√©ponse de l\'API de chat:');
      console.log('üìÑ Message:', testMessage);
      console.log('ü§ñ R√©ponse:', data.response.substring(0, 200) + '...');
    } else {
      console.log('‚ùå Erreur API de chat:', response.status, response.statusText);
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }

  console.log('\n‚ú® Test termin√©');
  console.log('\nüí° Votre chat IA peut maintenant :');
  console.log('   - R√©cup√©rer et expliquer les articles de blog');
  console.log('   - D√©crire les modules disponibles');
  console.log('   - Fournir des informations pr√©cises sur les prix');
  console.log('   - R√©pondre avec des donn√©es r√©elles de votre plateforme');
}

// Ex√©cuter le test
testChatWithData().catch(console.error); 